events { worker_connections 1024; }
http {

  include       mime.types;
  default_type  application/octet-stream;

  upstream backend_servers {
    # Spring Boot 멀티 인스턴스 8080포트
    server backend1:8080;
    server backend2:8080;
    server backend3:8080;
  }
  server {
    listen 80;

    # 1) WebSocket/REST API → 백엔드 프록시
    location /api/ {
      proxy_pass http://backend_servers;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # 세션 쿠키 관련
      proxy_cookie_path / "/; HttpOnly; Secure; SameSite=None";
    }

    # 2) WebSocket (ex: /ws로 연결) → 백엔드 프록시
    location /ws/ {
      proxy_pass http://backend_servers;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # H2 콘솔
    location /h2-console/ {
      proxy_pass http://backend_servers;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }


    # React SPA 라우팅
    location / {
      root /usr/share/nginx/html;
      index index.html;
      try_files $uri /index.html;
      add_header Cache-Control "no-cache, no-store, must-revalidate";
    }  
  }
}
